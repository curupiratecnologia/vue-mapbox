{"version":3,"sources":["webpack://vue-mapbox/./src/components/VmLayerArc.vue?7da7","webpack://vue-mapbox/src/components/VmLayerArc.vue","webpack://vue-mapbox/./src/components/VmLayerArc.vue?e333","webpack://vue-mapbox/./src/components/VmLayerArc.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","name","layer","zIndex","_e","staticRenderFns","inject","props","type","String","required","Number","data","Array","witdh","Function","default","color","sourceColor","targetColor","sourcePosition","targetPosition","layerCreated","id","destroyed","created","mounted","$nextTick","watch","setProps","methods","addLayer","MapboxVueInstance","getNewIdForLayer","autoHighlight","pickable","getWidth","getSourcePosition","getTargetPosition","getSourceColor","getTargetColor","item","getSourcePositionFunc","pos","console","log","getTargetPositionFunc","getSourceColorFunc","convertToArray","getTargetColorFunc","shorthandRegex","hex","replace","m","r","g","b","result","exec","createLayer","component"],"mappings":"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","file":"vue-mapbox.umd.min.the-decker.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.layerCreated)?_c('vm-layer',{attrs:{\"name\":'arc'+this.name,\"customLayer\":_vm.layer,\"zIndex\":_vm.zIndex,\"type\":\"custom\"}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n     <vm-layer\n      v-if=\"layerCreated\"\n      :name=\"'arc'+this.name\"\n      :customLayer=\"layer\"\n      :zIndex=\"zIndex\"\n      type=\"custom\"\n    />\n    </div>\n\n</template>\n\n<script>\n\nimport { ArcLayer } from '@deck.gl/layers'\nimport { MapboxLayer } from '@deck.gl/mapbox'\nimport { Deck } from '@deck.gl/core'\nimport get from 'lodash/get'\nimport has from 'lodash/has'\n\nexport default {\n\n  name: 'VmLayerArc',\n  inject: { getMap: 'getMap', mapboxgl: 'mapboxgl', MapboxVueInstance: 'MapboxVueInstance' },\n\n  props: {\n    /** Unique Name of the layers */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n       (Dynamic) If Number, is order of the layer. Can set the Name of the layer to put after\n    */\n    zIndex: {\n      type: [Number, String]\n    },\n    /** Data Item\n     * @values Array of object item that have key for from point and to point, as weel as colors, with\n    */\n    data: {\n      type: Array,\n      required: true\n    },\n    /** With Arcs\n     * @values number or function thad will get item from data\n    */\n    witdh: {\n      type: [Number, Function],\n      default: 10\n    },\n    /** color\n     * @values color to use. If sourceColor os destinationColor defined, this will be ignore\n    */\n    color: {\n      type: String,\n      default: 'blue'\n    },\n    /** sourceColor\n     * @values number or function thad will get item from data\n    */\n    sourceColor: {\n      type: [String, Function]\n    },\n    /** sourceColor\n     * @values number or function thad will get item from data\n    */\n    targetColor: {\n      type: [String, Function]\n    },\n    /** getSourcePosition\n     * @values function or path thad will get item from data\n    */\n    sourcePosition: {\n      type: [String, Function],\n      default: 'from'\n    },\n    /** getSourcePosition\n     * @values function or path thad will get item from data\n    */\n    targetPosition: {\n      type: [String, Function],\n      default: 'to'\n    }\n  },\n\n  data () {\n    return {\n      layerCreated: false,\n      id: false\n    }\n  },\n\n  destroyed () {\n    // if (this.getMap()) {\n    //   if (this.getMap().getLayer(this.name)) {\n    //     console.log('destroying Arc Layer')\n    //     this.MapboxVueInstance.removeLayer(this.name)\n    //   }\n    // }\n    this.layer = null\n  },\n\n  created: function () {\n    this.layer = null\n  },\n\n  mounted: function () {\n    this.$nextTick(() => {\n      this.addLayer()\n    })\n  },\n\n  watch: {\n    '$props.data': function (val, oldval) {\n      if (this.layer) this.layer.setProps({ data: this.data })\n      // if (this.decklayer) this.decklayer.setProps({ layers: this.createLayer() })\n    },\n    '$props.width': function (val, oldval) {\n      if (this.layer) this.layer.setProps({ getWidth: d => this.getWidth(d) })\n      // if (this.decklayer) this.decklayer.setProps({ layers: this.createLayer() })\n    }\n  },\n\n  methods: {\n\n    addLayer: function () {\n      this.id = this.MapboxVueInstance.getNewIdForLayer(this.name)\n\n      // this.decklayer = new Deck({\n      //   gl: this.MapboxVueInstance.getMap().painter.context.gl,\n      //   layers: this.createLayer()\n      // })\n\n      this.layer = new MapboxLayer({\n        id: this.id,\n        type: ArcLayer,\n        data: this.data,\n        autoHighlight: true,\n        pickable: true, // TODO\n        getWidth: d => this.getWidth(d),\n        getSourcePosition: d => this.getSourcePositionFunc(d),\n        getTargetPosition: d => this.getTargetPositionFunc(d),\n        getSourceColor: d => this.getSourceColorFunc(d),\n        getTargetColor: d => this.getTargetColorFunc(d)\n      })\n\n      this.layerCreated = true\n\n      // debugger\n      // this.MapboxVueInstance.addLayer(this.layer)\n      // this.getMap().addLayer(this.layer)\n    },\n\n    getWidth: function (item) {\n      if (typeof this.witdh === 'function') {\n        return this.witdh(item)\n      } else if (isNaN(this.witdh)) {\n        // if not number, get a path\n        return get(item, this.witdh, 5)\n      }\n      return this.witdh\n    },\n\n    getSourcePositionFunc: function (item) {\n      let pos\n      if (typeof this.sourcePosition === 'function') {\n        pos = this.sourcePosition(item)\n      } else {\n        pos = get(item, this.sourcePosition, [-45, -15])\n      }\n      console.log(pos)\n      return pos\n    },\n\n    getTargetPositionFunc: function (item) {\n      let pos\n      if (typeof this.targetPosition === 'function') {\n        pos = this.targetPosition(item)\n      } else {\n        pos = get(item, this.targetPosition, [-45, -15])\n      }\n      console.log(pos)\n      return pos\n    },\n\n    getSourceColorFunc: function (item) {\n      let color\n\n      if (!this.sourceColor) {\n        color = this.color\n      }\n      if (typeof this.sourceColor === 'function') {\n        color = this.sourceColor(item)\n      } else if (has(item, this.sourceColor)) {\n        color = get(item, this.sourceColor)\n      } else {\n        color = this.sourceColor\n      }\n      return this.convertToArray(color)\n    },\n\n    getTargetColorFunc: function (item) {\n      let color\n      if (!this.targetColor) {\n        color = this.color\n      }\n      if (typeof this.targetColor === 'function') {\n        color = this.targetColor(item)\n      } else if (has(item, this.targetColor)) {\n        color = get(item, this.targetColor)\n      } else {\n        color = this.targetColor\n      }\n      return this.convertToArray(color)\n    },\n\n    convertToArray: function hexToRgb (hex) {\n      // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n      var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\n      hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n        return r + r + g + g + b + b\n      })\n\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n      return result ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ] : [0, 0, 0]\n    }\n\n  },\n\n  createLayer: function () {\n    return [\n      new ArcLayer({\n        id: this.id,\n        data: this.data,\n        autoHighlight: true,\n        pickable: true, // TODO\n        getWidth: d => this.getWidth(d),\n        getSourcePosition: d => this.getSourcePositionFunc(d),\n        getTargetPosition: d => this.getTargetPositionFunc(d),\n        getSourceColor: d => this.getSourceColorFunc(d),\n        getTargetColor: d => this.getTargetColorFunc(d)\n      })\n    ]\n  }\n\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VmLayerArc.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VmLayerArc.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VmLayerArc.vue?vue&type=template&id=21bff847&\"\nimport script from \"./VmLayerArc.vue?vue&type=script&lang=js&\"\nexport * from \"./VmLayerArc.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}