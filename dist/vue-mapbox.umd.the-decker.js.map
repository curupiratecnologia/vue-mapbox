{"version":3,"sources":["webpack://vue-mapbox/asciify-image (ignored)","webpack://vue-mapbox/../node/utils/to-array-buffer.node (ignored)","webpack://vue-mapbox/./src/components/VmLayerArc.vue?7da7","webpack://vue-mapbox/src/components/VmLayerArc.vue","webpack://vue-mapbox/./src/components/VmLayerArc.vue?e333","webpack://vue-mapbox/./src/components/VmLayerArc.vue"],"names":[],"mappings":";;;;;AAAA,e;;;;;;;ACAA,e;;;;;;;;;;;;ACAA,0BAA0B,aAAa,0BAA0B,wBAAwB,mDAAmD,OAAO,oFAAoF;AACvO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcA;AACA;AACA;AACA;AACA;AAEA;AAEA,oBAFA;AAGA;AAAA;AAAA;AAAA;AAAA,GAHA;AAKA;AACA;AACA;AACA,kBADA;AAEA;AAFA,KAFA;;AAMA;;;AAGA;AACA;AADA,KATA;;AAYA;;;AAGA;AACA,iBADA;AAEA;AAFA,KAfA;;AAmBA;;;AAGA;AACA,8BADA;AAEA;AAFA,KAtBA;;AA0BA;;;AAGA;AACA,kBADA;AAEA;AAFA,KA7BA;;AAiCA;;;AAGA;AACA;AADA,KApCA;;AAuCA;;;AAGA;AACA;AADA,KA1CA;;AA6CA;;;AAGA;AACA,8BADA;AAEA;AAFA,KAhDA;;AAoDA;;;AAGA;AACA,8BADA;AAEA;AAFA;AAvDA,GALA;AAkEA,MAlEA,kBAkEA;AACA;AACA,yBADA;AAEA;AAFA;AAIA,GAvEA;AAyEA,WAzEA,uBAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjFA;AAmFA;AACA;AACA,GArFA;AAuFA;AAAA;;AACA;AACA;AACA,KAFA;AAGA,GA3FA;AA6FA;AACA;AACA;AAAA;AAAA,SADA,CAEA;AACA,KAJA;AAKA;AAAA;;AACA;AAAA;AAAA;AAAA;AAAA,SADA,CAEA;AACA;AARA,GA7FA;AAwGA;AAEA;AAAA;;AACA,mEADA,CAGA;AACA;AACA;AACA;;AAEA;AACA,mBADA;AAEA,0CAFA;AAGA,uBAHA;AAIA,2BAJA;AAKA,sBALA;AAKA;AACA;AAAA;AAAA,SANA;AAOA;AAAA;AAAA,SAPA;AAQA;AAAA;AAAA,SARA;AASA;AAAA;AAAA,SATA;AAUA;AAAA;AAAA;AAVA;AAaA,+BArBA,CAuBA;AACA;AACA;AACA,KA5BA;AA8BA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;;AACA;AACA,KAtCA;AAwCA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA;AACA;AACA,KAjDA;AAmDA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA;AACA;AACA,KA5DA;AA8DA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA;AACA,KA5EA;AA8EA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA;AACA,KA3FA;AA6FA;AACA;AACA;AACA;AACA;AACA,OAFA;AAIA;AACA,uBACA,uBADA,EAEA,uBAFA,EAGA,uBAHA,IAIA,SAJA;AAKA;AA1GA,GAxGA;AAsNA;AAAA;;AACA,YACA;AACA,iBADA;AAEA,qBAFA;AAGA,yBAHA;AAIA,oBAJA;AAIA;AACA;AAAA;AAAA,OALA;AAMA;AAAA;AAAA,OANA;AAOA;AAAA;AAAA,OAPA;AAQA;AAAA;AAAA,OARA;AASA;AAAA;AAAA;AATA,MADA;AAaA;AApOA,G;;ACrBoU,CAAgB,oHAAG,EAAC,C;;;;;ACA/P;AAC3B;AACL;;;AAGzD;AAC0F;AAC1F,gBAAgB,8CAAU;AAC1B,EAAE,6CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,iG","file":"vue-mapbox.umd.the-decker.js","sourcesContent":["/* (ignored) */","/* (ignored) */","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.layerCreated)?_c('vm-layer',{attrs:{\"name\":'arc'+this.name,\"customLayer\":_vm.layer,\"zIndex\":_vm.zIndex,\"type\":\"custom\"}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n     <vm-layer\n      v-if=\"layerCreated\"\n      :name=\"'arc'+this.name\"\n      :customLayer=\"layer\"\n      :zIndex=\"zIndex\"\n      type=\"custom\"\n    />\n    </div>\n\n</template>\n\n<script>\n\nimport { ArcLayer } from '@deck.gl/layers'\nimport { MapboxLayer } from '@deck.gl/mapbox'\nimport { Deck } from '@deck.gl/core'\nimport get from 'lodash/get'\nimport has from 'lodash/has'\n\nexport default {\n\n  name: 'VmLayerArc',\n  inject: { getMap: 'getMap', mapboxgl: 'mapboxgl', MapboxVueInstance: 'MapboxVueInstance' },\n\n  props: {\n    /** Unique Name of the layers */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n       (Dynamic) If Number, is order of the layer. Can set the Name of the layer to put after\n    */\n    zIndex: {\n      type: [Number, String]\n    },\n    /** Data Item\n     * @values Array of object item that have key for from point and to point, as weel as colors, with\n    */\n    data: {\n      type: Array,\n      required: true\n    },\n    /** With Arcs\n     * @values number or function thad will get item from data\n    */\n    witdh: {\n      type: [Number, Function],\n      default: 10\n    },\n    /** color\n     * @values color to use. If sourceColor os destinationColor defined, this will be ignore\n    */\n    color: {\n      type: String,\n      default: 'blue'\n    },\n    /** sourceColor\n     * @values number or function thad will get item from data\n    */\n    sourceColor: {\n      type: [String, Function]\n    },\n    /** sourceColor\n     * @values number or function thad will get item from data\n    */\n    targetColor: {\n      type: [String, Function]\n    },\n    /** getSourcePosition\n     * @values function or path thad will get item from data\n    */\n    sourcePosition: {\n      type: [String, Function],\n      default: 'from'\n    },\n    /** getSourcePosition\n     * @values function or path thad will get item from data\n    */\n    targetPosition: {\n      type: [String, Function],\n      default: 'to'\n    }\n  },\n\n  data () {\n    return {\n      layerCreated: false,\n      id: false\n    }\n  },\n\n  destroyed () {\n    // if (this.getMap()) {\n    //   if (this.getMap().getLayer(this.name)) {\n    //     console.log('destroying Arc Layer')\n    //     this.MapboxVueInstance.removeLayer(this.name)\n    //   }\n    // }\n    this.layer = null\n  },\n\n  created: function () {\n    this.layer = null\n  },\n\n  mounted: function () {\n    this.$nextTick(() => {\n      this.addLayer()\n    })\n  },\n\n  watch: {\n    '$props.data': function (val, oldval) {\n      if (this.layer) this.layer.setProps({ data: this.data })\n      // if (this.decklayer) this.decklayer.setProps({ layers: this.createLayer() })\n    },\n    '$props.width': function (val, oldval) {\n      if (this.layer) this.layer.setProps({ getWidth: d => this.getWidth(d) })\n      // if (this.decklayer) this.decklayer.setProps({ layers: this.createLayer() })\n    }\n  },\n\n  methods: {\n\n    addLayer: function () {\n      this.id = this.MapboxVueInstance.getNewIdForLayer(this.name)\n\n      // this.decklayer = new Deck({\n      //   gl: this.MapboxVueInstance.getMap().painter.context.gl,\n      //   layers: this.createLayer()\n      // })\n\n      this.layer = new MapboxLayer({\n        id: this.id,\n        type: ArcLayer,\n        data: this.data,\n        autoHighlight: true,\n        pickable: true, // TODO\n        getWidth: d => this.getWidth(d),\n        getSourcePosition: d => this.getSourcePositionFunc(d),\n        getTargetPosition: d => this.getTargetPositionFunc(d),\n        getSourceColor: d => this.getSourceColorFunc(d),\n        getTargetColor: d => this.getTargetColorFunc(d)\n      })\n\n      this.layerCreated = true\n\n      // debugger\n      // this.MapboxVueInstance.addLayer(this.layer)\n      // this.getMap().addLayer(this.layer)\n    },\n\n    getWidth: function (item) {\n      if (typeof this.witdh === 'function') {\n        return this.witdh(item)\n      } else if (isNaN(this.witdh)) {\n        // if not number, get a path\n        return get(item, this.witdh, 5)\n      }\n      return this.witdh\n    },\n\n    getSourcePositionFunc: function (item) {\n      let pos\n      if (typeof this.sourcePosition === 'function') {\n        pos = this.sourcePosition(item)\n      } else {\n        pos = get(item, this.sourcePosition, [-45, -15])\n      }\n      console.log(pos)\n      return pos\n    },\n\n    getTargetPositionFunc: function (item) {\n      let pos\n      if (typeof this.targetPosition === 'function') {\n        pos = this.targetPosition(item)\n      } else {\n        pos = get(item, this.targetPosition, [-45, -15])\n      }\n      console.log(pos)\n      return pos\n    },\n\n    getSourceColorFunc: function (item) {\n      let color\n\n      if (!this.sourceColor) {\n        color = this.color\n      }\n      if (typeof this.sourceColor === 'function') {\n        color = this.sourceColor(item)\n      } else if (has(item, this.sourceColor)) {\n        color = get(item, this.sourceColor)\n      } else {\n        color = this.sourceColor\n      }\n      return this.convertToArray(color)\n    },\n\n    getTargetColorFunc: function (item) {\n      let color\n      if (!this.targetColor) {\n        color = this.color\n      }\n      if (typeof this.targetColor === 'function') {\n        color = this.targetColor(item)\n      } else if (has(item, this.targetColor)) {\n        color = get(item, this.targetColor)\n      } else {\n        color = this.targetColor\n      }\n      return this.convertToArray(color)\n    },\n\n    convertToArray: function hexToRgb (hex) {\n      // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n      var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\n      hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n        return r + r + g + g + b + b\n      })\n\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n      return result ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ] : [0, 0, 0]\n    }\n\n  },\n\n  createLayer: function () {\n    return [\n      new ArcLayer({\n        id: this.id,\n        data: this.data,\n        autoHighlight: true,\n        pickable: true, // TODO\n        getWidth: d => this.getWidth(d),\n        getSourcePosition: d => this.getSourcePositionFunc(d),\n        getTargetPosition: d => this.getTargetPositionFunc(d),\n        getSourceColor: d => this.getSourceColorFunc(d),\n        getTargetColor: d => this.getTargetColorFunc(d)\n      })\n    ]\n  }\n\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VmLayerArc.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VmLayerArc.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VmLayerArc.vue?vue&type=template&id=21bff847&\"\nimport script from \"./VmLayerArc.vue?vue&type=script&lang=js&\"\nexport * from \"./VmLayerArc.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}