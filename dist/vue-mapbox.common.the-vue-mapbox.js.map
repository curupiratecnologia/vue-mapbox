{"version":3,"sources":["webpack://vue-mapbox/./src/components/VueMapbox.vue?c7ae","webpack://vue-mapbox/./src/components/VueMapbox.vue?ead9","webpack://vue-mapbox/./src/components/VueMapbox.vue?aada","webpack://vue-mapbox/src/components/VueMapbox.vue","webpack://vue-mapbox/./src/components/VueMapbox.vue?a3b8","webpack://vue-mapbox/./src/components/VueMapbox.vue"],"names":[],"mappings":";;;;;AAAA,uC;;;;;;;;ACAA;AAAA;AAAA;AAAmgB,CAAgB,yiBAAG,EAAC,C;;;;;;;;;;;;ACAvhB,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,iCAAiC,gEAAgE,EAAE,YAAY,wEAAwE,sBAAsB,wGAAwG,qBAAqB,wDAAwD,aAAa,gIAAgI;AACznB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBA;AACA;AACA;AACA;AACA;CAIA;AAEA;AACA;AACA;;AACA,yBACA,OADA,EAEA,UAFA,EAGA,YAHA,EAIA,YAJA,EAKA,UALA,EAMA,WANA,EAOA,SAPA,EAQA,aARA,EASA,OATA,EAUA,YAVA,EAWA,UAXA,EAYA,WAZA,EAaA,aAbA,EAcA,WAdA,EAeA,MAfA,EAgBA,SAhBA,EAiBA,WAjBA,EAkBA,MAlBA,EAmBA,SAnBA,EAoBA,WApBA,EAqBA,MArBA,EAsBA,SAtBA,EAuBA,aAvBA,EAwBA,QAxBA,EAyBA,WAzBA,EA0BA,YA1BA,EA2BA,OA3BA,EA4BA,UA5BA,EA6BA,cA7BA,EA8BA,YA9BA,EA+BA,eA/BA,EAgCA,kBAhCA,EAiCA,sBAjCA,EAkCA,MAlCA,EAmCA,QAnCA,EAoCA,MApCA,EAqCA,OArCA,EAsCA,MAtCA,EAuCA,WAvCA,EAwCA,YAxCA,EAyCA,aAzCA,EA0CA,kBA1CA,EA2CA,mBA3CA,EA4CA,mBA5CA;AA+CA;AAEA,mBAFA;;AAGA;;;AAGA;AACA;;;AAGA;AACA,4BADA;AAEA;AAFA,KAJA;;AAQA;;;AAGA;AACA,4BADA;AAEA;AAFA,KAXA;;AAeA;;;AAGA;AACA,mBADA;AAEA;AAFA,KAlBA;;AAuBA;;;;AAIA;AACA,kBADA;AAEA;AAFA,KA3BA;;AA+BA;;;AAGA;AACA,4BADA;AAEA;AAFA,KAlCA;;AAsCA;;;AAGA;AACA,kBADA;AAEA;AAFA,KAzCA;;AA6CA;;;AAGA;AACA,kBADA;AAEA;AAFA,KAhDA;;AAoDA;;;AAGA;AACA,kBADA;AAEA;AAFA,KAvDA;;AA2DA;;;AAGA;AACA,iBADA;AAEA;AAAA;AAAA;AAFA,KA9DA;;AAkEA;;;AAGA;AACA,6BADA;AAEA;AAFA,KArEA;;AAyEA;;;AAGA;AACA,iBADA;AAEA;AAFA,KA5EA;;AAgFA;;;AAGA;AACA,iBADA;AAEA;AAFA,KAnFA;;AAuFA;;;;AAIA;AACA,4BADA;AAEA;AAFA,KA3FA;;AA+FA;;;AAGA;AACA,kBADA;AAEA;AAAA;AAAA;AAFA,KAlGA;;AAsGA;;;AAGA;AACA,kBADA;AAEA;AAAA;AAAA;AAFA,KAzGA;AA4GA;;AACA;;;AAGA;AACA,mBADA;AAEA;AAFA,KAhHA,CAmHA;;AAnHA,GANA;AA6HA;AAAA;;AACA;AACA;AAAA;AAAA,OADA;AAEA,+BAFA;AAGA;AAAA;AAAA,OAHA;AAIA;AAJA;AAMA,GApIA;AAsIA,MAtIA,kBAsIA;AACA;AACA;;;AAGA,sBAJA;AAKA,eALA;AAMA,mBANA;AAOA,kBAPA;AAQA;AARA;AAUA,GAjJA;AAmJA,cAnJA,0BAmJA,CAEA,CArJA;AAuJA,SAvJA,qBAuJA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,eAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGA,yGAHA;;AAAA;AAGA,sBAHA;AAIA;;AAJA;AAMA;AACA;AACA,yCARA,CAQA;;AACA,wCATA,CASA;AACA;;AACA,8CAXA,CAWA;;AACA,6CAZA,CAYA;AAEA;;AACA;AACA;AACA,eAFA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,GAzKA;AA2KA;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA,KARA;AASA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAfA,GA3KA;AA6LA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA,KANA;AAOA;AACA;AAAA;AAAA;AACA;AATA,GA7LA;AAyMA,eAzMA,2BAyMA;AACA;AACA,GA3MA;AA6MA,SA7MA,qBA6MA;AACA,mDADA,CAGA;AACA;AACA;AACA,GAnNA;AAqNA,SArNA,qBAqNA;AAAA;;AACA;AACA;AACA;AACA,KAFA;AAGA,GA1NA;AA4NA,eA5NA,2BA4NA;AACA;AACA;AACA;AACA,GAhOA;AAkOA;AAEA;AAAA;;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA,sFACA,iBADA;AAEA,2CAFA;AAGA,kCAHA;AAIA,uBAJA;AAKA,4BALA;AAMA,2BANA;AAOA,uBAPA;AAQA,uBARA;AASA,2BATA;AAUA,iCAVA,CAWA;;AAXA;AAcA;AAEA;AAEA;AACA;AACA;;;;;;AAKA;;AACA;AACA,OATA;;AAWA;AACA;AACA;AACA,SAFA;AAGA;AACA,KA3CA;AA6CA;AACA;AACA,KA/CA;;AAiDA;;;AAGA;AAAA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAFA;;AAGA;;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,eAFA,MAEA;AACA;AACA;AACA,aANA,MAMA;AACA;AACA;AACA,eAFA,MAEA;AACA;AACA;AACA;AACA;AACA,SA5BA;AA6BA;AACA,KApFA;;AAsFA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,KApGA;;AAsGA;;;AAGA,6CACA;AACA;AACA;AACA;AACA;AACA;AACA,KAhHA;;AAkHA;;;AAGA;AAAA;;AACA;;AACA;AACA;AACA,OAJA,CAMA;;;AACA;AACA;AACA;AACA;AACA;AACA,OAJA,EARA,CAaA;;AACA,sCAdA,CAeA;;AACA,2DAhBA,CAiBA;;AACA;AACA;AACA;;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;AACA,OATA;AAUA;AACA,KAlJA;AAoJA;AACA;;AACA;AACA;AACA;;AACA;AACA,KA1JA;;AA4JA;;;AAGA;AACA;AACA,KAjKA;;AAkKA;;;AAGA;AAAA;;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA,eACA,yBADA;AAAA,SATA,CAaA;;AACA;AACA;;AACA;AAAA,iBACA,yBADA;AAAA;AAGA,OALA;AAOA;AACA,KA3LA;;AA6LA;;;AAGA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA,WAFA;AAGA;AACA,SAPA,CAQA;;;AACA;;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA,WAFA;AAGA;;AACA;AACA,OAzBA;;AA0BA;;AACA;AACA;AACA,OA/BA,CAiCA;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AACA,OATA;AAWA;AAEA,qDA/CA,CAgDA;;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,2CAFA,CAGA;AACA,SAJA,MAIA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,KArEA,EAqEA,GArEA,CAhMA;;AAuQA;;;AAGA,+CACA;AACA,KA5QA;;AA8QA;;;;AAKA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,OAJA;AAKA,KA3RA;;AA6RA;;;;AAKA;AAAA;;AACA,4BADA,CAEA;;AACA;AACA;AACA;AACA;;AACA;AACA,OALA;AAMA,KA3SA;;AA6SA;;;AAGA;AAAA;;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AAAA,ejbA;AAlOA,G;;AC/EmU,CAAgB,kHAAG,EAAC,C;;;;;;;;ACA/P;AAC3B;AACL;AACgB;;;AAGxE;AAC0F;AAC1F,IAAI,mBAAS,GAAG,8CAAU;AAC1B,EAAE,4CAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,kGAAS,Q","file":"vue-mapbox.common.the-vue-mapbox.js","sourcesContent":["// extracted by mini-css-extract-plugin","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueMapbox.vue?vue&type=style&index=0&lang=stylus&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueMapbox.vue?vue&type=style&index=0&lang=stylus&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vue-mapbox\",style:({ position:'relative', width: _vm.myWidth, height: _vm.myHeight })},[_c('div',{ref:\"mapabaselayer\",staticClass:\"map-layer mapbox-map-container\",attrs:{\"id\":\"mapaBaseLayer\"}},[(_vm.mapLoaded)?_c('div',[_vm._t(\"default\")],2):_vm._e(),(_vm.showLoader && !_vm.mapLoaded)?_c('div',{staticClass:\"loader\"},[_vm._t(\"loader\")],2):_vm._e(),(_vm.devMode)?_c('div',{staticStyle:{\"position\":\"absolute\",\"bottom\":\"0\",\"font-size\":\"9px\",\"padding\":\"0.4em\",\"z-index\":\"10\",\"background\":\"#00000066\",\"color\":\"white\"}},[_vm._v(_vm._s(_vm.camera))]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable eqeqeq */``\n<template>\n  <div class=\"vue-mapbox\" :style=\"{ position:'relative', width: myWidth, height: myHeight }\">\n    <div ref=\"mapabaselayer\" id=\"mapaBaseLayer\" class=\"map-layer mapbox-map-container\">\n      <div v-if=\"mapLoaded\">\n        <slot></slot>\n      </div>\n      <div v-if=\"showLoader && !mapLoaded\" class=\"loader\">\n        <!-- @slot Slot to show a custom loader it props showLoadder is set true  -->\n        <slot name=\"loader\">\n          <!-- <div> <i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i> <br /> {{'Loading'}}... </div> -->\n        </slot>\n      </div>\n      <div v-if='devMode' style='position:absolute;bottom:0;font-size:9px;padding:0.4em;z-index:10;background:#00000066;color:white;'>{{ camera }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport findVNodeChildren from '../utils/findVNodeChildren'\nimport get from 'lodash/get'\nimport orderBy from 'lodash/orderBy'\nimport debounce from 'lodash/debounce'\n\nimport uniqueId from 'lodash/uniqueId'\n\n// inicia os webworks etc antes, para performance de mapax construidos e destruidos\n\n// import { ScatterplotLayer, ArcLayer, HexagonLayer } from '@deck.gl/layers'\n// import { MapboxLayer } from '@deck.gl/mapbox'\n// import mapBaseStyle from './styles/cgeestyle'\nconst nativeEventsTypes = [\n  'click',\n  'dblclick',\n  'mouseenter',\n  'mouseleave',\n  'mouseout',\n  'mousedown',\n  'mouseup',\n  'contextmenu',\n  'wheel',\n  'touchstart',\n  'touchend',\n  'touchmove',\n  'touchcancel',\n  'movestart',\n  'move',\n  'moveend',\n  'dragstart',\n  'drag',\n  'dragend',\n  'zoomstart',\n  'zoom',\n  'zoomend',\n  'rotatestart',\n  'rotate',\n  'rotateend',\n  'pitchstart',\n  'pitch',\n  'pitchend',\n  'boxzoomstart',\n  'boxzoomend',\n  'boxzoomcancel',\n  'webglcontextlost',\n  'webglcontextrestored',\n  'load',\n  'render',\n  'idle',\n  'error',\n  'data',\n  'styledata',\n  'sourcedata',\n  'dataloading',\n  'styledataloading',\n  'sourcedataloading',\n  'styleimagemissing'\n]\n\nexport default {\n\n  name: 'VueMapbox',\n  /**\n       * Access current mapbox instance using componentInstance.map\n    */\n  props: {\n    /**\n       * Mapa Width. In px or percent\n    */\n    width: {\n      type: [Number, String],\n      default: '100%'\n    },\n    /**\n       * Mapa Height. In px or percent\n    */\n    height: {\n      type: [Number, String],\n      default: '100%'\n    },\n    /**\n       * Show a Loader\n    */\n    showLoader: {\n      type: Boolean,\n      default: true\n    },\n\n    /**\n       * AcceToken for your account for mapbox, if you are uing it for server tiles. Can be blank if you use anothers sources.\n       * If you set to the vue client an process.env.VUE_APP_MAPBOX_ACCESS_TOKEN, it will be used too\n    */\n    accessToken: {\n      type: String,\n      default: ''\n    },\n    /**\n       * The map's Mapbox style. Can be a URL or the STYLE OBJECT itself . example mapbox://styles/mapbox/streets-v11.  more info at https://mapbox.com/mapbox-gl-style-spec/\n    */\n    mapStyle: {\n      type: [String, Object],\n      default: 'mapbox://styles/mapbox/outdoors-v11'\n    },\n    /**\n       * The minimum zoom level of the map (0-24).\n    */\n    minZoom: {\n      type: Number,\n      default: 0\n    },\n    /**\n       * The maximun zoom level of the map (0-24).\n    */\n    maxZoom: {\n      type: Number,\n      default: 24\n    },\n    /**\n       * Define Zoom level (0-24).\n    */\n    zoom: {\n      type: Number,\n      default: 4\n    },\n    /**\n       *  Define center array.\n    */\n    center: {\n      type: Array,\n      default: () => [-53.048889, -14.951209500045001]\n    },\n    /**\n       * If true , the map's position (zoom, center latitude, center longitude, bearing, and pitch) will be synced with the hash fragment of the page's URL. For example, http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60 . An additional string may optionally be provided to indicate a parameter-styled hash, e.g. http://path/to/my/page.html#map=2.59/39.26/53.07/-24.1/60&foo=bar , where foo is a custom parameter and bar is an arbitrary hash distinct from the map hash.\n    */\n    hash: {\n      type: [Boolean, String],\n      default: false\n    },\n    /**\n       *  The initial bounds of the map. If bounds is specified, it overrides center and zoom constructor options.\n    */\n    bounds: {\n      type: Array,\n      default: undefined\n    },\n    /**\n       *  The initial bounds of the map. If bounds is specified, it overrides center and zoom constructor options.\n    */\n    maxBounds: {\n      type: Array,\n      default: undefined\n    },\n    /**\n       * camera padding. will be user for all bounds, fly etc\n       * @values number or {top,left,right,bottom}\n    */\n    padding: {\n      type: [Object, Number],\n      default: 0\n    },\n    /**\n       *  Other options to pass to mapbox. Will be merged here. See https://docs.mapbox.com/mapbox-gl-js/api/#map for all options.\n    */\n    otherOptions: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n       *  Object with images to load in format {'imagename':url,'image2name':url2}\n    */\n    images: {\n      type: Object,\n      default: () => ({})\n    }, // {'name':url,'name2':url2}\n    /**\n       *  show cameras attributes\n    */\n    devMode: {\n      type: Boolean,\n      default: false\n    } // {'name':url,'name2':url2}\n\n  },\n\n  provide: function () {\n    return {\n      getMap: () => this.map,\n      mapLoaded: this.mapLoaded,\n      mapboxgl: () => this.mapboxgl,\n      MapboxVueInstance: this\n    }\n  },\n\n  data () {\n    return {\n      /**\n       *  Set When Map Style is Loaded\n     */\n      mapLoaded: false,\n      map: null,\n      sources: null,\n      layers: null,\n      camera: ''\n    }\n  },\n\n  beforeCreate () {\n\n  },\n\n  async created () {\n\n    if (!window.mapboxgl) {\n      const mapboxgl = await import(/* webpackChunkName: \"mapboxgl-core\" */ 'mapbox-gl')\n      window.mapboxgl = mapboxgl.default || mapboxgl\n    }\n    this.mapboxgl =  window.mapboxgl \n    window.mapboxgl.prewarm()\n    this.sources = new Map() // {id:{type,data,instance}}\n    this.layers = new Map() //\n    // this.images = new Map() //\n    this.layersGroups = new Map() //\n    this.eventsOnMap = new Map() //\n\n    // make sure the html div to use in mapbox is loaded\n    this.$nextTick(() => {\n      this.createMap()\n    })\n  },\n\n  computed: {\n\n    myHeight: function () {\n      let h = this.height\n      if (typeof h === 'number') {\n        h += 'px'\n      }\n      return h\n    },\n    myWidth: function () {\n      let w = this.width\n      if (typeof w === 'number') {\n        w += 'px'\n      }\n      return w\n    }\n  },\n\n  watch: {\n    bounds: function (val) {\n      // var newCameraTransform = this.map.cameraForBounds(val, {\n      //   padding: { top: 10, bottom: 25, left: 15, right: 5 }\n      // })\n      this.map.fitBounds(val, { padding: this.padding })\n    },\n    maxBounds: function (val) {\n      if (this.map) { this.map.setMaxBounds(val) }\n    }\n  },\n\n  beforeUpdated () {\n    console.log('beforeUpdated dom vueMapbox')\n  },\n\n  mounted () {\n    console.log('Mounted - Mounted dom vueMapbox')\n\n    // this.$nextTick(() => {\n    //   this.updateLayerOrder()\n    // })\n  },\n\n  updated () {\n    console.log('Updated - updated dom vueMapbox')\n    this.$nextTick(() => {\n      this.updateLayerOrder()\n    })\n  },\n\n  beforeDestroy () {\n    if (this.map) {\n      this.map.remove()\n    }\n  },\n\n  methods: {\n\n    createMap: function () {\n      window.mapboxgl.prewarm()\n      if (this.accessToken !== '') {\n        window.mapboxgl.accessToken = this.accessToken\n      } else if (process.env.VUE_APP_MAPBOX_ACCESS_TOKEN) {\n        window.mapboxgl.accessToken = process.env.VUE_APP_MAPBOX_ACCESS_TOKEN\n      }\n      this.map = new window.mapboxgl.Map({\n        ...this.otherOptions,\n        container: this.$refs.mapabaselayer,\n        refreshExpiredTiles: false,\n        antialias: true,\n        style: this.mapStyle,\n        center: this.center,\n        zoom: this.zoom,\n        hash: this.hash,\n        bounds: this.bounds,\n        maxBounds: this.maxBounds\n        // maxBounds: [ -48.44732177294034, -16.638275455496753, -47.22472784587998, -14.904304916348181 ]\n      })\n\n      this.addPropsImages()\n\n      this.setupEvents(this.$listeners, this.map, nativeEventsTypes)\n\n      this.map.on('load', () => {\n        const _this = this\n        /**\n         * Load Event - When Maps Load\n         *  @property {object} _this the component instance\n          * @property {object} map the mapbox instance\n         */\n        this.$emit('load', _this, this.map)\n        this.mapLoaded = true\n      })\n\n      if (this.devMode) {\n        this.map.on('moveend', () => {\n          this.camera = this.map.getZoom()\n        })\n      }\n    },\n\n    getMap: function () {\n      return this.map\n    },\n\n    /**\n    * Automatic Setup Events from Mapbox Classes in Vue Instances\n    */\n    setupEvents: function (listners, MapboxElement, theEventsOfElement, layerId) {\n      if (listners) {\n        Object.entries(listners).forEach((item) => {\n          let eventName = item[0]\n          const eventFunction = item[1]\n\n          const eventFinal = (e) => {\n            eventFunction(e, this.map, this)\n          }\n          let once = false\n\n          if (eventName.indexOf('~') === 0) {\n            once = true\n            eventName = eventName.substring(1)\n          }\n          if (theEventsOfElement.includes(eventName)) {\n            if (once) {\n              if (layerId) {\n                MapboxElement.once(eventName, layerId, eventFinal)\n              } else {\n                MapboxElement.once(eventName, eventFinal)\n              }\n            } else {\n              if (layerId) {\n                MapboxElement.on(eventName, layerId, eventFinal)\n              } else {\n                MapboxElement.on(eventName, eventFinal)\n              }\n            }\n          }\n        })\n      }\n    },\n\n    /**\n    * Create/Update Source\n    */\n    addSource: function (id, type, options) {\n      // if source name exist, create a randow one\n      if (this.map.getSource(id)) {\n        id = uniqueId(id + type)\n      }\n\n      this.map.addSource(id, { type, ...options })\n      const sourceObject = this.map.getSource(id)\n\n      this.sources.set(id, { id, type, options, instance: sourceObject })\n      return this.sources.get(id)\n    },\n\n    /**\n    * Remove Source\n    */\n    removeSource: function (id) {\n      // if (this.sources.has(id)) {\n      //   this.sources.delete(id)\n      // }\n      // if (this.map && this.map.getSource(id)) {\n      //   this.map.removeSource(id)\n      // }\n    },\n\n    /**\n    * Update Source\n    */\n    updateSource: function (sourceid, type, options) {\n      debugger\n      if (this.sources.has(sourceid)) {\n        this.sources.delete(sourceid)\n      }\n\n      // apago todos os layers que tem esse source\n      const layers = this.map.getStyle().layers\n      layers.forEach(layer => {\n        if (layer.source === sourceid) {\n          this.map.removeLayer(layer.id)\n        }\n      })\n      // apago o source\n      this.map.removeSource(sourceid)\n      // adiciono o novo source no com mesmo is\n      const source = this.addSource(sourceid, type, options)\n      // adiciono os layer novamente\n      layers.forEach((layer, i) => {\n        if (layer.source === sourceid) {\n          const beforeLayer = layers?.[i - 1]\n          if (beforeLayer) {\n            this.map.addLayer(layer, beforeLayer.id)\n          } else {\n            this.map.addLayer(layer)\n          }\n        }\n      })\n      return source\n    },\n\n    getNewIdForLayer: function (name) {\n      let id = name\n      if (!this.map.getLayer(name)) {\n        id = uniqueId('layer' + name)\n      }\n      return id\n    },\n\n    /**\n    * Create/Update Layer\n    */\n    addLayerTemp: function (options) {\n      this.map.addLayer(options)\n    },\n    /**\n    * Create/Update Layer\n    */\n    addLayer: function (options, zIndex) {\n      // // if layer name exist, create a randow one\n      const id = options.id\n      this.map.addLayer(options)\n\n      const sourceObject = this.map.getLayer(options.id)\n\n      this.layers.set(id, { id })\n\n      this.$nextTick(() =>\n        this.updateLayerOrder()\n      )\n\n      // when idle because some time the layer get time to be added\n      this.map.once('idle', () => {\n        console.log('A styledata event occurred.')\n        this.$nextTick(() =>\n          this.updateLayerOrder()\n        )\n      })\n\n      return id\n    },\n\n    /**\n    * Update All Layers Order\n    */\n    updateLayerOrder: debounce(function () {\n      console.log('UPDATE LAYER ORDER ==============================================================================')\n      const findLayers = (VNode, bag) => {\n        bag = bag || []\n        if (Array.isArray(VNode)) {\n          VNode.forEach(node => {\n            findLayers(node, bag)\n          })\n          return bag\n        }\n        // I will allways get the component instance\n        let VNodeInstance\n        if (get(VNode, 'componentInstance')) {\n          VNodeInstance = get(VNode, 'componentInstance')\n        } else {\n          VNodeInstance = VNode\n        }\n        if ((get(VNodeInstance, '$options.name', get(VNodeInstance, 'componentOptions.Ctor.options.name')) === 'VmLayer')) {\n          bag.push(VNodeInstance)\n        }\n        const children = get(VNodeInstance, '$children')\n        if (Array.isArray(children)) {\n          children.forEach(node => {\n            findLayers(node, bag)\n          })\n        }\n        return bag\n      }\n      const layerInstances = findLayers(this.$slots.default)\n      if (!layerInstances || layerInstances.length === 1) {\n        return\n      }\n\n      // make layers with order\n      let layersId = layerInstances.map((layer, i) => {\n        const component = layer.componentInstance || layer\n        const id = get(component, '$data.layerId')\n        const zIndex = get(component, '$props.zIndex')\n        let index = i\n        if (zIndex) {\n          index = parseInt(zIndex) + (index / 10)\n        }\n        return { id, index }\n      })\n\n      layersId = orderBy(layersId, ['index'], ['asc'])\n\n      const currentLayers = this.map.getStyle().layers\n      // get index of first layer in\n      for (let i = layersId.length; i > 1; i--) {\n        const currentLayer = layersId[i - 1].id\n        if (!this.map.getLayer(currentLayer)) {\n          continue\n        }\n        if (i === layersId.length) {\n          // if (currentLayers[currentLayers.length - 1].id !== currentLayer) {\n          this.map.moveLayer(currentLayer)\n          // }\n        } else {\n          // get index of layer\n          // const index = currentLayers.findIndex(l => l.id === currentLayer)\n          // const beforeLayerId = currentLayers[index - 1].id\n          const topLayer = layersId[i].id\n          if (!this.map.getLayer(topLayer)) {\n            continue\n          }\n          this.map.moveLayer(currentLayer, topLayer)\n        }\n      }\n    }, 400),\n\n    /**\n    * Update Layers Index\n    */\n    moveLayer: function (id, zIndex) {\n      // // if layer name exist, create a randow one\n    },\n\n    /**\n    Adde images in map\n    * @params {object} images.\n    */\n\n    addPropsImages: function (images) {\n      if (!this.map) return\n      images = images || this.images\n      Object.entries(images).forEach((item) => {\n        const key = item[0]\n        const value = item[1]\n        this.addImage(key, value)\n      })\n    },\n\n    /**\n    Add images in map\n    * @params {object} images.\n    */\n\n    addImage: function (key, url) {\n      if (!this.map) return\n      // TODO - chek when is a htmlimage or other type\n      this.map.loadImage(url, (error, image) => {\n        if (error) {\n          console.error(error)\n        }\n        if (!this.map.hasImage(key)) this.map.addImage(key, image)\n      })\n    },\n\n    /**\n    * Remove Source\n    */\n    removeLayer: function (id) {\n      if(!this.map) return\n      \n      if (this.layers.has(id)) {\n        this.layers.delete(id)\n      }\n      if (this.map.getLayer(id)) {\n        this.map.removeLayer(id)\n      }\n      this.$nextTick(() =>\n        this.updateLayerOrder()\n      )\n    },\n\n    //   setMapEvents: function () {\n    //     var _map = this.$options.map\n    //     // var { MapboxLayer, HexagonLayer } = window.deck;\n    //     var _t = this\n\n    //     this.$options.map.on('style.load', function () {\n    //       setTimeout(() => {\n    //         _t.$store.commit('mapLoaded', true)\n    //       }, 100)\n\n    //       window.mapboxmap.flyTo({ pitch: 0, zoom: _t.zoom + 0.5, duration: 2000 })\n    //     })\n\n    //     this.$options.map.on('click', (e) => {\n    //       // allox coords copy when click on shift.\n    //       // need to disable on env\n    //       // if(event.shiftKey){\n    //       var coordnates = `[${e.lngLat.lng},${e.lngLat.lat}]`\n    //       $('body').append('<input id=\"clipboard\" style=\"position:absolute;z-index:0;opacity:0\"/>')\n    //       var copyText = document.getElementById('clipboard')\n    //       copyText.value = coordnates\n    //       /* Select the text field */\n    //       copyText.select()\n    //       /* Copy the text inside the text field */\n    //       document.execCommand('Copy')\n    //       /* Alert the copied text */\n    //       // alert(\"Copied the text: \" + copyText.value);\n    //       $(copyText).remove()\n    //       // }\n    //     })\n\n    //     this.$options.map.on('zoomend', (e) => {\n    //       var map = e.target\n    //       var zoomStore = this.$store.getters.zoom\n    //       var zoomMap = map.getZoom()\n    //       if (zoomStore != zoomMap) { this.$store.commit('zoom', zoomMap) }\n    //     })\n    //   },\n\n    //   flyToPage: function (to, duration = 2000, force = false) {\n    //     to = to || this.$route\n    //     var camera = _.get(to, 'meta.camera', false)\n    //     var id = _.get(to, 'params.id', false)\n\n    //     var cameraSet = _.get(camera, id, camera)\n\n    //     if (this.$store.state.initialAnimationFinish === false) { cameraSet = { center: [-47.85927131478161, -15.799714225713075], pitch: 55.00000000000001, zoom: 6.30769269135277, bearing: 0 } }\n\n    //     if (!cameraSet) {\n    //       return\n    //     }\n\n    //     setTimeout(() => { // make sure we have a delay to finish any initial setup\n    //       if (this.map) {\n    //         this.map.resize() // resize because the first time container may be change and the map note\n    //         // just change if it is not moving\n    //         if (this.map.isMoving() && force == false) {\n    //           //   console.log(\"Map Moving, will not go to \");\n    //           return\n    //         } else {\n    //           // console.log(\"Map will fly\");\n    //           this.map.flyTo({ ...cameraSet, duration: duration })\n    //         }\n\n    //         // tell the map has finish it first animation\n    //         setTimeout(() => {\n    //           if (this.$store.state.initialAnimationFinish == false) { this.$store.commit('initialAnimationFinish', true) }\n    //         }, duration)\n    //       }\n    //     }, 100)\n    //   }\n\n    docEvents: function () {\n      this.$emit('click')\n      this.$emit('dblclick')\n      this.$emit('mouseenter')\n      this.$emit('mouseleave')\n      this.$emit('mouseout')\n      this.$emit('contextmenu')\n      this.$emit('wheel')\n      this.$emit('touchstart')\n      this.$emit('touchend')\n      this.$emit('touchmove')\n      this.$emit('touchcancel')\n      this.$emit('movestart')\n      this.$emit('move')\n      this.$emit('moveend')\n      this.$emit('dragstart')\n      this.$emit('drag')\n      this.$emit('dragend')\n      this.$emit('zoomstart')\n      this.$emit('zoom')\n      this.$emit('zoomend')\n      this.$emit('rotatestart')\n      this.$emit('rotate')\n      this.$emit('rotateend')\n      this.$emit('pitchstart')\n      this.$emit('pitch')\n      this.$emit('pitchend')\n      this.$emit('boxzoomstart')\n      this.$emit('boxzoomend')\n      this.$emit('boxzoomcancel')\n      this.$emit('webglcontextlost')\n      this.$emit('webglcontextrestored')\n      this.$emit('load')\n      this.$emit('render')\n      this.$emit('idle')\n      this.$emit('error')\n      this.$emit('data')\n      this.$emit('styledata')\n      this.$emit('sourcedata')\n      this.$emit('dataloading')\n      this.$emit('styledataloading')\n      this.$emit('sourcedataloading')\n      this.$emit('styleimagemissing')\n    }\n  }\n\n}\n\n</script>\n\n<style lang=\"stylus\">\n\n    .loader{\n        position:fixed;\n        top:50%;\n        left:50%;\n        text-align:center;\n    }\n\n    .map-layer {\n        position: absolute !important;\n        left: 0px;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        width:100%;\n        // background:red;\n        z-index:3\n\n        .mapboxgl-canvas{\n            left:0;\n        }\n    }\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueMapbox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VueMapbox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VueMapbox.vue?vue&type=template&id=727de603&\"\nimport script from \"./VueMapbox.vue?vue&type=script&lang=js&\"\nexport * from \"./VueMapbox.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VueMapbox.vue?vue&type=style&index=0&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}